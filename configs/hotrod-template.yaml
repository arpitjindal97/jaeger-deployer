---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: $TEMP-hotrod
  labels:
    app.kubernetes.io/name: hotrod
    app.kubernetes.io/instance: $TEMP
    app.kubernetes.io/version: "1.17.0"
    app.kubernetes.io/component: application
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: hotrod
      app.kubernetes.io/instance: $TEMP
      app.kubernetes.io/component: application
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hotrod
        app.kubernetes.io/instance: $TEMP
        app.kubernetes.io/component: application
    spec:
      securityContext:
        {}
      containers:
        - name: $TEMP-hotrod-app
          securityContext:
            {}
          image: jaegertracing/example-hotrod:1.17
          imagePullPolicy: IfNotPresent
          env:
            - name: JAEGER_AGENT_HOST
              value: localhost
            - name: JAEGER_AGENT_PORT
              value: "6831"
          ports:
            - name: ui
              containerPort: 8080
              protocol: TCP
          resources:
            {}
          volumeMounts:
          livenessProbe:
            httpGet:
              path: /
              port: ui
          readinessProbe:
            httpGet:
              path: /
              port: ui
        - name: $TEMP-hotrod-agent-sidecar
          securityContext:
            {}
          image: jaegertracing/jaeger-agent:1.17.0
          imagePullPolicy: IfNotPresent
          env:
            - name: REPORTER_GRPC_HOST_PORT
              value: $COLLECTOR_URL
            - name: REPORTER_GRPC_TLS
              value: "true"
            - name: REPORTER_GRPC_TLS_CA
              value: /tls/ca.crt
            - name: REPORTER_GRPC_TLS_CERT
              value: /tls/tls.crt
            - name: REPORTER_GRPC_TLS_KEY
              value: /tls/tls.key
          ports:
            - name: admin
              containerPort: 14271
              protocol: TCP
          volumeMounts:
            - name: agent-tls
              mountPath: /tls
              readOnly: true
          livenessProbe:
            httpGet:
              path: /
              port: admin
          readinessProbe:
            httpGet:
              path: /
              port: admin
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
        - name: agent-tls
          secret:
            secretName: $TEMP-tls
---
apiVersion: v1
kind: Service
metadata:
  name: $TEMP-hotrod
  labels:
    app.kubernetes.io/name: hotrod
    app.kubernetes.io/instance: $TEMP
    app.kubernetes.io/component: application
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: ui
  selector:
    app.kubernetes.io/name: hotrod
    app.kubernetes.io/instance: $TEMP
    app.kubernetes.io/component: application
  type: ClusterIP
---
